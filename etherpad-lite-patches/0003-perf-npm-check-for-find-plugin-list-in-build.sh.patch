From b57f443c92fae878c39497cdebed236a66559565 Mon Sep 17 00:00:00 2001
From: Daniel Krol <orblivion@gmail.com>
Date: Sun, 3 Oct 2021 21:28:29 -0400
Subject: [PATCH 03/25] perf: npm check for find plugin list in build.sh

This improves startup time substantially.
---
 src/bin/run.sh                         |  3 +++
 src/node/cachePluginDependenciesObj.js |  8 ++++++++
 src/static/js/pluginfw/plugins.js      | 12 ++++++++++--
 3 files changed, 21 insertions(+), 2 deletions(-)
 create mode 100644 src/node/cachePluginDependenciesObj.js

diff --git a/src/bin/run.sh b/src/bin/run.sh
index d36d2c68..ba6d15f5 100755
--- a/src/bin/run.sh
+++ b/src/bin/run.sh
@@ -29,6 +29,9 @@ fi
 # Prepare the environment
 #src/bin/installDeps.sh "$@" || exit 1
 
+# TODO - do this like Kenton does, eventually
+mkdir -p cache
+
 # Move to the node folder and start
 log "Starting Etherpad..."
 
diff --git a/src/node/cachePluginDependenciesObj.js b/src/node/cachePluginDependenciesObj.js
new file mode 100644
index 00000000..e322bfd4
--- /dev/null
+++ b/src/node/cachePluginDependenciesObj.js
@@ -0,0 +1,8 @@
+#!/usr/bin/env node
+
+'use strict';
+
+// SANDSTORM - put the plugin list into cache/ during build.sh so it can be
+// part of the spk
+
+require('../static/js/pluginfw/plugins').cachePackages()
diff --git a/src/static/js/pluginfw/plugins.js b/src/static/js/pluginfw/plugins.js
index 74fbbafc..7807dbcf 100644
--- a/src/static/js/pluginfw/plugins.js
+++ b/src/static/js/pluginfw/plugins.js
@@ -114,7 +114,8 @@ exports.update = async () => {
   await callInit();
 };
 
-exports.getPackages = async () => {
+// SANDSTORM: Called during build.sh
+exports.cachePackages = async () => {
   logger.info('Running npm to get a list of installed plugins...');
   // Notes:
   //   * Do not pass `--prod` otherwise `npm ls` will fail if there is no `package.json`.
@@ -130,9 +131,16 @@ exports.getPackages = async () => {
     }
     info.realPath = await fs.realpath(info.path);
   }));
-  return dependencies;
+
+  await fs.writeFile('cache/plugin-dependencies-obj', JSON.stringify(dependencies));
 };
 
+exports.getPackages = async () => {
+  // SANDSTORM EDIT - Don't query npm at runtime (takes a few seconds) when
+  // running inside SANDSTORM. Do it during build and cache the results.
+  return JSON.parse(await fs.readFile('cache/plugin-dependencies-obj'))
+}
+
 const loadPlugin = async (packages, pluginName, plugins, parts) => {
   const pluginPath = path.resolve(packages[pluginName].path, 'ep.json');
   try {
-- 
2.20.1

