From 528c0577244691c8ddfb469c3994e16a1e93f4a3 Mon Sep 17 00:00:00 2001
From: Daniel Krol <orblivion@gmail.com>
Date: Wed, 27 Oct 2021 21:24:10 -0400
Subject: [PATCH 10/12] Sends "edit" notification to Sandstorm

Requires change in pkgdef
---
 src/node/handler/PadMessageHandler.js |  3 ++
 src/node/handler/SandstormHandler.js  | 63 +++++++++++++++++++++++++++
 2 files changed, 66 insertions(+)
 create mode 100644 src/node/handler/SandstormHandler.js

diff --git a/src/node/handler/PadMessageHandler.js b/src/node/handler/PadMessageHandler.js
index f8051402..5e1445ac 100644
--- a/src/node/handler/PadMessageHandler.js
+++ b/src/node/handler/PadMessageHandler.js
@@ -39,6 +39,7 @@ const assert = require('assert').strict;
 const nodeify = require('nodeify');
 const {RateLimiterMemory} = require('rate-limiter-flexible');
 const webaccess = require('../hooks/express/webaccess');
+const sandstorm = require('./SandstormHandler.js');
 
 let rateLimiter;
 
@@ -272,6 +273,8 @@ exports.handleMessage = async (socket, message) => {
     } else if (message.data.type === 'USER_CHANGES') {
       stats.counter('pendingEdits').inc();
       padChannels.emit(message.padId, {socket, message}); // add to pad queue
+      // SANDSTORM EDIT
+      sandstorm.activity(socket.client.request.headers["x-sandstorm-session-id"], "edit");
     } else if (message.data.type === 'USERINFO_UPDATE') {
       await handleUserInfoUpdate(socket, message);
     } else if (message.data.type === 'CHAT_MESSAGE') {
diff --git a/src/node/handler/SandstormHandler.js b/src/node/handler/SandstormHandler.js
new file mode 100644
index 00000000..cdf6a31a
--- /dev/null
+++ b/src/node/handler/SandstormHandler.js
@@ -0,0 +1,63 @@
+var ERR = require("async-stacktrace");
+var authorManager = require("../db/AuthorManager");
+var Capnp = require("capnp");
+var SandstormHttpBridge = Capnp.importSystem("sandstorm/sandstorm-http-bridge.capnp").SandstormHttpBridge;
+
+var capnpConnection = null;
+var httpBridge = null;
+
+function getHttpBridge() {
+  if (!httpBridge) {
+    capnpConnection = Capnp.connect("unix:/tmp/sandstorm-api");
+    httpBridge = capnpConnection.restore(null, SandstormHttpBridge);
+  }
+  return httpBridge;
+}
+
+var lastActivityTime = {};
+
+var ACTIVITY_TYPES = {
+  "edit": 0,
+  "comment": 1,
+  "reply": 2,
+};
+
+exports.activity = function (sessionId, type, path, threadPath, threadTitle, body) {
+  if (type == "edit") {
+    // Only post edits once every 15 seconds per active session.
+    var last = lastActivityTime[sessionId] || 0;
+    var now = Date.now();
+    if (now - last < 15000) return;
+    lastActivityTime[sessionId] = now;
+  }
+
+  Promise.resolve().then(() => {
+    var httpBridge = getHttpBridge();
+    var activity = {};
+    
+    if (type) {
+      activity.type = ACTIVITY_TYPES[type];
+    }
+    
+    if (path) {
+      activity.path = path;
+    }
+
+    if (threadPath) {
+      activity.thread = {
+        path: threadPath,
+        title: { defaultText: threadTitle || threadPath },
+      };
+    }
+    if (body) {
+      activity.notification = {
+        caption: { defaultText: body }
+      };
+    }
+
+    return httpBridge.getSessionContext(sessionId).context.activity(activity);
+  }).catch(err => {
+    console.error(err.stack);
+  });
+}
+
-- 
2.20.1

